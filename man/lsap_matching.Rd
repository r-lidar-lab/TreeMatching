% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matching_functions.R, R/shinyapps.R
\name{lsap_matching}
\alias{lsap_matching}
\alias{guess_unmatch_cost}
\alias{lsap_app}
\title{Match measured and inventory trees solving LSAP}
\usage{
lsap_matching(
  treemap,
  dxymax = 2,
  dzmax = 40,
  zrel = 40,
  unmatch_cost = "auto"
)

guess_unmatch_cost(treemap, dxymax, dzmax, zrel, ...)

lsap_app(treemap)
}
\arguments{
\item{treemap}{A \code{TreeMapMatching} object. See \link{make_mapmatching}.}

\item{dxymax}{Maximum allowed 2D (XY) distance (in projection units) for a valid match.}

\item{dzmax}{Maximum allowed Z difference (e.g., DBH or height) in \% for a valid match. Be careful
the difference is expressed in \%. Default is 40\%. A 10 cm DBH tree can be matched with tree in
6, 14 cm (10 +/- 40\% of 10).}

\item{zrel}{Relative importance of the Z dimension compared to XY. Since Z and XY units differ,
Z is scaled to be comparable. A value of 0 means Z is ignored; a value of 1 gives Z and XY equal
weights. Default is 40\%.}

\item{unmatch_cost}{Fixed cost of assigning a tree to a dummy (i.e., unmatched). See Details.}

\item{...}{unused}
}
\value{
A \code{data.table} with the following columns:
\describe{
\item{\code{index_measure}}{Index of the matched tree in the measured (LiDAR) dataset.}
\item{\code{index_inventory}}{Index of the matched tree in the inventory dataset, or \code{NA} if unmatched.}
}
Only matches that satisfy the distance thresholds are returned. Invalid matches are marked as \code{NA}.
}
\description{
Matches trees from a LiDAR-derived dataset (e.g., ALS or TLS) to trees from a field inventory
by solving a Linear Sum Assignment Problem (LSAP) in 3D space. The third dimension (Z)
is artificially constructed from DBH or tree height to improve the accuracy of positional matching.
To allow partial matching (i.e., unmatched trees), dummy trees are added with a fixed cost
(\code{unmatch_cost}). This prevents the algorithm from forcing poor matches.
}
\details{
This function computes a matching between trees in a 3D space, where Z is not an actual height
but a synthetic dimension created from DBH (or tree height). The goal is to improve discrimination
between nearby trees of different sizes. Because DBH and spatial coordinates (XY) are not directly
comparable, the Z dimension is scaled using the \code{zrel} parameter.\cr\cr
Matching is performed solving LSAP using Hungarian algorithm via \link[clue:solve_LSAP]{solve_LSAP},
which finds the lowest-cost one-to-one pairings. However, LSAP matches all items by default,
even when no good match exists. To avoid poor assignments, dummy trees are introduced in the cost
matrix with a fixed cost (\code{unmatch_cost}).\cr\cr'
If the cost of a match exceeds \code{unmatch_cost}, the algorithm prefers leaving the tree unmatched.
These unmatched entries are then returned with \code{index_inventory = NA}.\cr\cr
Choosing a good value for \code{unmatch_cost} is important:
\itemize{
\item It must be \strong{higher than the cost of a good match}, to allow valid pairings.
\item It must be \strong{lower than the cost of a bad match}, to avoid forced poor pairings.
}
When \code{unmatch_cost = "auto"}, a simple heuristic is used to estimate a reasonable value,
which is printed to the console. Users can refine this value manually if needed.
}
\seealso{
\link[clue]{solve_LSAP}, \link{make_mapmatching}, \link{match_trees}
}
